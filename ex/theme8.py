class Transformer():
    def __init__(self, name):
        self.name = name

    def run(self):
        print('Run')
    
    def fire(self):
        print('Boom')

transformer = Transformer('Name')
transformer.fire()
print(transformer.name)

class Autobot(Transformer):
    def __init__(self, name, prime_status):
        super().__init__(name)
        self.prime_status = prime_status

    def fire(self):
        print('Kaboom')
    


autobot = Autobot('Bamblbee', False)
autobot.fire()

class Decepticon(Transformer):
    def transform(self, object):
        print(f'Transformed to {object}')


dec = Decepticon('Shokweiv')
dec.transform('tank')
dec.fire()
dec.run()
print(dec.name)

class Person():
    def __init__(self, name, age, hp, ksr):
        self.name = name
        self.age = age
        self.hp = hp
        self.ksr = ksr # KFC spawn rate
    
    def spawn(self):
        print('–Ø —Ä–æ–¥–∏–ª—Å—è')
    
    def kick(self):
        ''' –°–∫–∞–∂–µ—Ç Smash! '''
        print('Smash!')
    
person1 = Person('–î–∏–º–∞—Å', 13, 5, 100)
print(f'–ú–µ–Ω—è –∑–æ–≤—É—Ç {person1.name}, –º–Ω–µ {person1.age}')
person1.spawn()

class Student(Person):
    def __init__(self, name, age, hp, ksr, war_ticket):
        super().__init__(name, age, hp, ksr)
        self.war_ticket = war_ticket

    def go_to_remi(self):
        print('–Ø –ø–æ—à—ë–ª –≤ –†–ï–ú–ò')
    
    def say_my_name(self):
        print(self.name)

class Teacher(Person):
    def oscarb(self, student):
        print(f'{student.name} –ø—Ä–∏–¥—ë—à—å –∫–æ –º–Ω–µ –ø–æ—Å–ª–µ –ø–∞—Ä—ã üíï')
    
    def kick(self):
        ''' –°–∫–∞–∂–µ—Ç —á—Ç–æ —Ç—ã –æ—Ç—á–∏—Å–ª–µ–Ω '''
        print('–û—Ç—á–∏—Å–ª–µ–Ω')


student1 = Student('–ò–≥–æ—Ä—å', 19, 2, 1, True)

teacher1 = Teacher('–û–ª–µ–≥', 45, 10, 3)

teacher1.oscarb(student1)
teacher1.kick()

import random

teams = ['white', 'blue', 'red']
heroes = []

white_soldiers = []

blue_soldiers = []

red_soldiers = []

class Unit():
    def __init__(self, team):
        self.id = random.randint(0, 1000000)
        self.team = team

class Hero(Unit):
    def __init__(self, team):
        super().__init__(team)
        self.level = 1

    def level_up(self):
        self.level += 1
        print(f'–ì–µ—Ä–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥—ã {self.team} –ø–æ–≤—ã—Å–µ–ª —É—Ä–æ–≤–µ–Ω—å')

class Soldier(Unit):
    def follow(self, hero):
        print(f'–°–æ–ª–¥–∞—Ç —Å –Ω–æ–º–µ—Ä–æ–º {self.id} —Å–ª–µ–¥—É–µ—Ç –∑–∞ –≥–µ—Ä–æ–µ–º —Å –Ω–æ–º–µ—Ä–æ–º {hero.id}')


for team in teams:
    heroes.append(Hero(team))

for i in range(100):
    team = random.choice(teams)

    match team:
        case 'white':
            white_soldiers.append(Soldier(team))
        case 'blue':
            blue_soldiers.append(Soldier(team))
        case 'red':
            red_soldiers.append(Soldier(team))

white_length = len(white_soldiers)
blue_length = len(blue_soldiers)
red_length = len(red_soldiers)

max_team = max(white_length, blue_length, red_length)

for i, team in enumerate((white_soldiers, blue_soldiers, red_soldiers)):
    team_length = len(team)
    if team_length == max_team:
        heroes[i].level_up()

blue_soldiers[10].follow(heroes[1])
